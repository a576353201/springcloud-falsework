<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fans.user.dao.UserDao">

    <!-- 基础Map -->
    <resultMap type="com.fans.user.entity.UserEntity" id="userMap">
        <id column="id" property="id"/>
        <result column="openid" property="openid"/>
        <result column="nickname" property="nickname"/>
        <result column="unify_uid" property="unifyUid"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="wx_profile" property="wxProfile"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="delete_time" property="deleteTime"/>
    </resultMap>
    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id
        ,openid,nickname,unify_uid,email,password,mobile,wx_profile,create_time,update_time,delete_time
    </sql>

    <select id="findAll" resultType="com.fans.user.entity.UserEntity">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>

    <select id="selectByPrimaryKey" resultMap="userMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey">
        delete
        from user
        where id = #{id}
    </delete>

    <insert id="insertSelective" parameterType="com.fans.user.entity.UserEntity" useGeneratedKeys="true"
            keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="unifyUid != null">
                unify_uid,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="wxProfile != null">
                wx_profile,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="openid != null">
                #{openid},
            </if>
            <if test="nickname != null">
                #{nickname},
            </if>
            <if test="unifyUid != null">
                #{unifyUid},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="mobile != null">
                #{mobile},
            </if>
            <if test="wxProfile != null">
                #{wxProfile},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="deleteTime != null">
                #{deleteTime},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            openid,
            nickname,
            unify_uid,
            email,
            password,
            mobile,
            wx_profile,
            create_time,
            update_time,
            delete_time,
        </trim>
        values
        <foreach collection="userEntityList" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.openid},
                #{item.nickname},
                #{item.unifyUid},
                #{item.email},
                #{item.password},
                #{item.mobile},
                #{item.wxProfile},
                #{item.createTime},
                #{item.updateTime},
                #{item.deleteTime},
            </trim>
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.fans.user.entity.UserEntity">
        update user
        <set>
            <if test="openid != null">
                openid = #{openid},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="unifyUid != null">
                unify_uid = #{unifyUid},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="wxProfile != null">
                wx_profile = #{wxProfile},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateBatchByPrimaryKeySelective">
        update user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="openid =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.openid}
                </foreach>
            </trim>
            <trim prefix="nickname =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.nickname}
                </foreach>
            </trim>
            <trim prefix="unify_uid =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.unifyUid}
                </foreach>
            </trim>
            <trim prefix="email =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.email}
                </foreach>
            </trim>
            <trim prefix="password =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.password}
                </foreach>
            </trim>
            <trim prefix="mobile =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.mobile}
                </foreach>
            </trim>
            <trim prefix="wx_profile =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.wxProfile}
                </foreach>
            </trim>
            <trim prefix="create_time =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.createTime}
                </foreach>
            </trim>
            <trim prefix="update_time =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.updateTime}
                </foreach>
            </trim>
            <trim prefix="delete_time =case" suffix="end,">
                <foreach collection="userEntityList" item="item" index="index">
                    when id = #{item.id} then #{item.deleteTime}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="userEntityList" index="index" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>
</mapper>